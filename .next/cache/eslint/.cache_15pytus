[{"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/_app.tsx":"1","/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/api/hello.ts":"2","/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/index.tsx":"3","/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/about.tsx":"4","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/DashboardHeader.tsx":"5","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/Footer.tsx":"6","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/Nav.tsx":"7","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/AboutUs.tsx":"8","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/DoctorItem.tsx":"9","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/DoctorList.tsx":"10","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/models/AttributesJson.ts":"11","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/models/Doctor.ts":"12","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/ServiceItem.tsx":"13","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/ServiceList.tsx":"14","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/models/Service.ts":"15","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/MapFrame.tsx":"16","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/Schedule.tsx":"17","/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/doctors/[name].tsx":"18","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/FooterGeneric.tsx":"19","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/SocialMediaShare.tsx":"20","/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/services/[serviceName].tsx":"21"},{"size":179,"mtime":1669210060663,"results":"22","hashOfConfig":"23"},{"size":307,"mtime":1669210060662,"results":"24","hashOfConfig":"23"},{"size":923,"mtime":1669563103993,"results":"25","hashOfConfig":"23"},{"size":199,"mtime":1669216333140,"results":"26","hashOfConfig":"23"},{"size":359,"mtime":1669227487729,"results":"27","hashOfConfig":"23"},{"size":515,"mtime":1669222903440,"results":"28","hashOfConfig":"23"},{"size":1232,"mtime":1669564013044,"results":"29","hashOfConfig":"23"},{"size":1229,"mtime":1669397634327,"results":"30","hashOfConfig":"23"},{"size":695,"mtime":1669409285851,"results":"31","hashOfConfig":"23"},{"size":1770,"mtime":1675512957116,"results":"32","hashOfConfig":"23"},{"size":101,"mtime":1669405653020,"results":"33","hashOfConfig":"23"},{"size":111,"mtime":1669549603117,"results":"34","hashOfConfig":"23"},{"size":1045,"mtime":1669562671247,"results":"35","hashOfConfig":"23"},{"size":1369,"mtime":1669409227848,"results":"36","hashOfConfig":"23"},{"size":60,"mtime":1669407835889,"results":"37","hashOfConfig":"23"},{"size":777,"mtime":1669541376724,"results":"38","hashOfConfig":"23"},{"size":1629,"mtime":1669539624411,"results":"39","hashOfConfig":"23"},{"size":2459,"mtime":1675515475990,"results":"40","hashOfConfig":"23"},{"size":537,"mtime":1669547620775,"results":"41","hashOfConfig":"23"},{"size":4023,"mtime":1669556231990,"results":"42","hashOfConfig":"23"},{"size":3037,"mtime":1669562636170,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fnu9j4",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/_app.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/api/hello.ts",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/index.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/about.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/DashboardHeader.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/Footer.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/Nav.tsx",["112","113","114"],[],"import Link from \"next/link\";\nimport navStyles from \"../styles/Nav.module.css\";\n\nconst Nav = () => {\n  return (\n    <nav className={navStyles.actual_nav}>\n      <Link href=\"#\" className={navStyles.link} local-link=\"main\">\n        Home\n      </Link>\n      <a className={navStyles.link} local-link=\"about\">\n        Our story\n      </a>\n      <a className={navStyles.link} local-link=\"services\">\n        Services\n      </a>\n      <a className={navStyles.link} local-link=\"testimonials\">\n        Testimonials\n      </a>\n      <a className={navStyles.link} local-link=\"contact\">\n        Contact\n      </a>\n\n      <div className={navStyles.languages}>\n        <div className={\"georgian \".concat(\"active\")}>\n          <a href=\"#\" lang=\"georgian\">\n            <img src=\"/images/language-georgia.png\" alt=\"\" />\n          </a>\n        </div>\n        <div className={navStyles.english}>\n          <a href=\"#\" lang=\"english\">\n            <img src=\"/images/language-britain.png\" alt=\"\" />\n          </a>\n        </div>\n        <div className={navStyles.russian}>\n          <a href=\"#\" lang=\"russian\">\n            <img src=\"/images/language-russia.png\" alt=\"\" />\n          </a>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/AboutUs.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/DoctorItem.tsx",["115","116"],[],"import { isProd, photoUrlProd, photoUrlLocal } from \"../env\";\nimport { Doctor } from \"./models/Doctor\";\nimport styles from \"../styles/DoctorItem.module.css\";\n\nconst DoctorItem = (props: any) => {\n  const doctor: Doctor = props.doctor;\n  var tempPhotoUrl = \"\";\n  if (isProd) {\n    tempPhotoUrl = photoUrlProd;\n  } else {\n    tempPhotoUrl = photoUrlLocal;\n  }\n\n  return (\n    <>\n      <img\n        src={tempPhotoUrl + doctor.attributes.doctorIcon.data.attributes.url}\n      />\n      <p className={styles.doctor_name}>{doctor?.attributes?.doctorName}</p>\n      <p className={styles.doctor_position}>\n        {doctor.attributes.doctorPosition}\n      </p>\n    </>\n  );\n};\n\nexport default DoctorItem;\n","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/DoctorList.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/models/AttributesJson.ts",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/models/Doctor.ts",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/ServiceItem.tsx",["117","118"],[],"import { isProd, photoUrlProd, photoUrlLocal } from \"../env\";\n\nimport Link from \"next/link\";\n\nimport { Service } from \"./models/Service\";\nimport styles from \"../styles/ServiceItem.module.css\";\n\nconst ServiceItem = (props: any) => {\n  const service: Service = props.service;\n  var tempPhotoUrl = \"\";\n  if (isProd) {\n    tempPhotoUrl = photoUrlProd;\n  } else {\n    tempPhotoUrl = photoUrlLocal;\n  }\n\n  return (\n    <>\n      <div className={styles.service_item_bg}>\n        <img\n          src={\n            tempPhotoUrl +\n            service.attributes.serviceGridIcon.data.attributes.url\n          }\n        />\n      </div>\n\n      <Link\n        legacyBehavior\n        href={`/services/${service?.attributes.postTitle}?articleId=${service.id}`}\n      >\n        <a>\n          <div className={styles.service_item_info}>\n            <h4 className={styles.service_name}>\n              {service.attributes.postTitle}\n            </h4>\n            <p>Read More</p>\n          </div>\n        </a>\n      </Link>\n    </>\n  );\n};\n\nexport default ServiceItem;\n","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/ServiceList.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/models/Service.ts",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/MapFrame.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/Schedule.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/doctors/[name].tsx",["119","120","121"],[],"import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport {\n  isProd,\n  apiUrlProd,\n  apiUrlLocal,\n  photoUrlProd,\n  photoUrlLocal,\n} from \"../../env\";\nimport FooterGeneric from \"../../components/FooterGeneric\";\nimport SocialMediaShare from \"../../components/SocialMediaShare\";\nimport { Doctor } from \"../../components/models/Doctor\";\nimport styles from \"../../styles/DoctorPage.module.css\";\n\nconst fetchDoctor = async (id: string) => {\n  var requestOptions: RequestInit = {\n    method: \"GET\",\n    redirect: \"follow\",\n  };\n\n  var tempBaseUrl = \"\";\n  if (isProd) {\n    tempBaseUrl = `${apiUrlProd}/doctors/${id}?populate=*`;\n  } else {\n    tempBaseUrl = `${apiUrlLocal}/doctors/${id}?populate=*`;\n  }\n\n  const res = await fetch(tempBaseUrl, requestOptions);\n  const data = await res.json();\n  return data.data;\n};\n\nexport default function DoctorPage() {\n  const [doctor, setDoctor] = useState<Doctor>();\n\n  const router = useRouter();\n  // const { name, doctorId } = router.query;\n\n  useEffect(() => {\n    if (router.isReady) {\n      const getDoctor = async () => {\n        const { name, doctorId } = router.query;\n        const doctor = await fetchDoctor(doctorId as string);\n        setDoctor(doctor);\n      };\n\n      getDoctor();\n    }\n  }, [router.isReady]);\n\n  var tempPhotoUrl = \"\";\n  if (isProd) {\n    tempPhotoUrl = photoUrlProd;\n  } else {\n    tempPhotoUrl = photoUrlLocal;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{doctor?.attributes.doctorName}</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <main>\n        <div className={styles.main_container}>\n          <section className={styles.service_header}>\n            <SocialMediaShare />\n          </section>\n\n          <div className={styles.doctor_info}>\n            <div className={styles.doctor_image}>\n              <img\n                src={\n                  tempPhotoUrl +\n                  doctor?.attributes.doctorIcon.data.attributes.url\n                }\n              />\n            </div>\n\n            <div className={styles.doctor_biography}>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: doctor?.attributes.doctorBiography,\n                }}\n              ></p>\n            </div>\n          </div>\n        </div>\n      </main>\n      <FooterGeneric />\n    </>\n  );\n}\n","/Users/icfl/Desktop/GFAI/nkhar.github.io/components/FooterGeneric.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/components/SocialMediaShare.tsx",[],[],"/Users/icfl/Desktop/GFAI/nkhar.github.io/pages/services/[serviceName].tsx",["122"],[],"import Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useState, useEffect } from \"react\";\nimport {\n  isProd,\n  apiUrlProd,\n  apiUrlLocal,\n  photoUrlProd,\n  photoUrlLocal,\n} from \"../../env\";\nimport FooterGeneric from \"../../components/FooterGeneric\";\nimport SocialMediaShare from \"../../components/SocialMediaShare\";\nimport { Service } from \"../../components/models/Service\";\nimport styles from \"../../styles/ServicePage.module.css\";\n\nconst fetchService = async (articleId: string) => {\n  var requestOptions: RequestInit = {\n    method: \"GET\",\n    redirect: \"follow\",\n  };\n\n  var tempBaseUrl = \"\";\n  if (isProd) {\n    tempBaseUrl = `${apiUrlProd}/services/${articleId}?populate=*`;\n  } else {\n    tempBaseUrl = `${apiUrlLocal}/services/${articleId}?populate=*`;\n  }\n\n  const res = await fetch(tempBaseUrl, requestOptions);\n  const data = await res.json();\n  return data.data;\n};\n\nexport default function DoctorPage() {\n  const [service, setService] = useState<Service>();\n\n  const router = useRouter();\n  const { name, articleId } = router.query;\n\n  useEffect(() => {\n    const getService = async () => {\n      const doctor = await fetchService(articleId as string);\n      setService(doctor);\n    };\n\n    getService();\n  }, []);\n\n  var tempPhotoUrl = \"\";\n  if (isProd) {\n    tempPhotoUrl = photoUrlProd;\n  } else {\n    tempPhotoUrl = photoUrlLocal;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>{service?.attributes.postTitle}</title>\n        <meta name=\"description\" content=\"Generated by create next app\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div className={styles.blue_cover}>\n        <h1>{service?.attributes.postTitle + \" Specialist\"}</h1>\n      </div>\n\n      <main>\n        <div className={styles.main_container}>\n          <section className={styles.service_header}>\n            <SocialMediaShare />\n            <div className={styles.identity_summary_wrapper}>\n              <div className={styles.identity}>\n                <h2>\n                  <span>Georgia Foot and Ankle Institute</span>\n                </h2>\n                <h3>\n                  <span>\n                    Podiatrists &amp; Foot and Ankle Surgeons located in\n                    Tbilisi, Georgia\n                  </span>\n                </h3>\n              </div>\n\n              <div className={styles.summary}>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: service?.attributes.postSummary,\n                  }}\n                ></p>\n              </div>\n            </div>\n          </section>\n\n          <section className={styles.service}>\n            <h2 className={styles.postQA}>\n              {service?.attributes.postTitle + \" Q & A\"}\n            </h2>\n            <div\n              className={styles.details}\n              dangerouslySetInnerHTML={{\n                __html: service?.attributes.postBody,\n              }}\n            ></div>\n          </section>\n        </div>\n      </main>\n      <FooterGeneric />\n    </>\n  );\n}\n",{"ruleId":"123","severity":1,"message":"124","line":26,"column":13,"nodeType":"125","endLine":26,"endColumn":62},{"ruleId":"123","severity":1,"message":"124","line":31,"column":13,"nodeType":"125","endLine":31,"endColumn":62},{"ruleId":"123","severity":1,"message":"124","line":36,"column":13,"nodeType":"125","endLine":36,"endColumn":61},{"ruleId":"123","severity":1,"message":"124","line":16,"column":7,"nodeType":"125","endLine":18,"endColumn":9},{"ruleId":"126","severity":1,"message":"127","line":16,"column":7,"nodeType":"125","endLine":18,"endColumn":9},{"ruleId":"123","severity":1,"message":"124","line":20,"column":9,"nodeType":"125","endLine":25,"endColumn":11},{"ruleId":"126","severity":1,"message":"127","line":20,"column":9,"nodeType":"125","endLine":25,"endColumn":11},{"ruleId":"128","severity":1,"message":"129","line":50,"column":6,"nodeType":"130","endLine":50,"endColumn":22,"suggestions":"131"},{"ruleId":"123","severity":1,"message":"124","line":75,"column":15,"nodeType":"125","endLine":80,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":75,"column":15,"nodeType":"125","endLine":80,"endColumn":17},{"ruleId":"128","severity":1,"message":"132","line":47,"column":6,"nodeType":"130","endLine":47,"endColumn":8,"suggestions":"133"},"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'router.query'. Either include it or remove the dependency array.","ArrayExpression",["134"],"React Hook useEffect has a missing dependency: 'articleId'. Either include it or remove the dependency array.",["135"],{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [router.isReady, router.query]",{"range":"140","text":"141"},"Update the dependencies array to be: [articleId]",{"range":"142","text":"143"},[1308,1324],"[router.isReady, router.query]",[1250,1252],"[articleId]"]